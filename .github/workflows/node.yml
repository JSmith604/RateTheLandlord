name: RateTheLandlord CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-be:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Lint backend
        run: |
          cd backend
          npm install
          npm run lint

  lint-fe:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Lint frontend
        run: |
          cd frontend
          npm install
          npm run lint

  docker-build:
    runs-on: ubuntu-latest
    needs: [lint-be, lint-fe]

    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Create env file
        run: |
          touch .env
          echo BEPORT=${{secrets.BEPORT}} >> .env
          echo ENVIRONMENT=${{secrets.ENVIRONMENT}} >> .env
          echo FEPORT=${{secrets.FEPORT}} >> .env
          echo HCPATCHA_SECRET_KEY=${{secrets.HCPATCHA_SECRET_KEY}} >> .env
          echo HCPATCHA_SITE_KEY=${{secrets.API_TOKEN_SALT}} >> .env
          echo JWT_KEY="${{secrets.JWT_KEY}}" >> .env
          echo API_URL=${{secrets.API_URL}} >> .env
          echo NEXT_PUBLIC_HCPATCHA_SITE_KEY=${{secrets.NEXT_PUBLIC_HCPATCHA_SITE_KEY}} >> .env
          echo PGDATABASE=${{secrets.PGDATABASE}} >> .env
          echo PGHOST=${{secrets.PGHOST}} >> .env
          echo PGPASSWORD="${{secrets.PGPASSWORD}}" >> .env
          echo PGPORT=${{secrets.PGPORT}} >> .env
          echo PGUSERNAME=${{secrets.PGUSERNAME}} >> .env
          cat .env
      - name: Pull Docker
        run: docker-compose pull
      - name: Build Docker
        run: docker-compose build

    publish:
      runs-on: ubuntu-latest
      needs: [docker-build]

      strategy:
        matrix:
          node-version: [16.x]
      steps:
        - uses: actions/checkout@v3
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
        - name: Publish to Github Packages Registry
          uses: elgohr/Publish-Docker-Github-Action@master
          with:
            name: RateTheLandlord/RateTheLandlord/rtl
            registry: docker.pkg.github.com
            username: ${{ secrets.USERNAME }}
            password: ${{ secrets.GITHUB_TOKEN }}
            dockerfile: Dockerfile-prod
            tags: latest

    # deploy:
    #   runs-on: ubuntu-latest
    #   needs: [docker-build]

    # strategy:
    #   matrix:
    #     node-version: [16.x]
    # steps:
    #   - uses: actions/checkout@v3
    #   - name: Use Node.js ${{ matrix.node-version }}
    #     uses: actions/setup-node@v3
    #     with:
    #       node-version: ${{ matrix.node-version }}
    #   - name: Deploy package to digitalocean
    #     uses: appleboy/ssh-action@master
    #     env:
    #       GITHUB_USERNAME: ${{ secrets.USERNAME }}
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       host: ${{ secrets.HOST }}
    #       username: ${{ secrets.USERNAME }}
    #       password: ${{ secrets.PASSWORD }}
    #       port: ${{ secrets.PORT }}
    #       envs: USERNAME, GITHUB_TOKEN
    #       script: |
    #         docker stop $(docker ps -a -q)
    #         docker login docker.pkg.github.com -u $GITHUB_USERNAME -p $GITHUB_TOKEN
    #         docker pull docker.pkg.github.com/RateTheLandlord/RateTheLandlord/rtl:latest
    #         docker run -dit -p 80:80 docker.pkg.github.com/RateTheLandlord/RateTheLandlord/rtl:latest
